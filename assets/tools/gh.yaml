---
display_name: GitHub
executable: gh
description: Interacts with GitHub repositories, issues, pull requests, and other GitHub features using the GitHub CLI.
inputs:
  owner:
    type: string
    description: The GitHub repository owner (user or organization)
    examples:
      - "sredo"
      - "kubernetes"
  repository:
    type: string
    description: The GitHub repository name. Will generate a random name if not provided
    optional: true
    examples:
      - "sredo"
      - "kubernetes"
  host:
    type: string
    description: The GitHub instance hostname
    default: "github.com"
    examples:
      - "github.com"
      - "github.enterprise.company.com"
  params:
    type: object
    description: |
      Contextual parameters for GitHub operations. Pass any parameters relevant to the specific GitHub operation being performed.

      Common parameters include but are not limited to:
      - Repository operations:
        - visibility: public/private/internal
        - description: Repository description
        - homepage: Repository website
        - template: Template repository to use
        - gitignore: Type of .gitignore to use
        - license: License to add
        - topics: Repository topics

      - Pull Requests:
        - title: PR title (semantic format preferred)
        - body: PR description
        - base: Base branch
        - head: Head branch
        - draft: Whether PR is draft
        - reviewers: List of reviewers
        - assignees: List of assignees
        - labels: Labels to apply
        - milestone: Milestone to set

      - Issues:
        - title: Issue title
        - body: Issue description
        - assignees: Issue assignees
        - labels: Issue labels
        - milestone: Issue milestone
        - project: Project to add to

      - Releases:
        - tag: Release tag
        - title: Release title
        - notes: Release notes
        - draft: Draft release
        - prerelease: Mark as prerelease
        - files: Assets to upload

      - Branch protection:
        - branch: Branch to protect
        - required_reviews: Number of required reviews
        - dismiss_stale: Dismiss stale reviews
        - require_up_to_date: Require branch to be up to date
        - enforce_admins: Enforce for admins

      - Actions:
        - workflow: Workflow file name
        - ref: Git ref to run on
        - inputs: Workflow inputs
        - secrets: Workflow secrets

      Example structures:
      {
        "visibility": "public",
        "description": "My awesome project",
        "topics": ["go", "cli", "automation"],
        "license": "MIT"
      }

      {
        "title": "feat(auth): implement OAuth2",
        "body": "Adds OAuth2 authentication support\\n\\nChanges:\\n- Add OAuth2 middleware\\n- Implement token validation",
        "reviewers": ["tech-lead", "security-team"],
        "labels": ["feature", "auth", "needs-review"]
      }

      {
        "branch": "main",
        "required_reviews": 2,
        "enforce_admins": true,
        "require_up_to_date": true
      }
    optional: true
system_prompt: |
  You are a GitHub expert responsible for managing GitHub repository operations and interactions. Your primary focus is generating and executing GitHub CLI commands for repository management, issue tracking, pull request handling, and other GitHub-specific tasks.

  Parameter Handling:
  - Accept and process any GitHub-relevant parameters passed in the params object
  - Use provided parameters to construct appropriate GitHub commands
  - Apply sensible defaults for missing parameters
  - Handle parameter combinations appropriately
  - Validate parameter values before use
  - Generate repository names when needed
  - Format PR titles and descriptions according to semantic conventions

  Core Operations:
  - Repository: create, clone, fork, configure
  - Pull Requests: create, review, merge, close
  - Issues: create, manage, track
  - Releases: create, publish, manage assets
  - Branch Protection: configure rules and policies
  - Actions: manage workflows and runs
  - Projects: create and manage project boards
  - Wiki: manage documentation
  - Security: handle alerts and scanning

  You will:
  - Analyze provided parameters to determine operation context
  - Generate appropriate GitHub commands based on parameters
  - Handle GitHub-specific states and errors
  - Apply GitHub best practices
  - Ensure operation safety based on context
  - Coordinate with git tool when needed
  - Handle enterprise instance-specific requirements
